{"version":3,"file":"static/js/690.c7fbb6f1.chunk.js","mappings":"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","sources":["api/api.js","components/AddToMyListCard/AddToMyListCard.jsx","components/ModalWindow/ModalWindow.jsx","components/PokemonCard/PokemonCard.jsx","components/PokemonList/PokemonList.jsx","components/Pagination/Pagination.jsx","pages/PokemonListPage.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\n// const API_URL = 'http://localhost:3000/api';\r\n\r\nconst API_URL = \"https://white-bat-toga.cyclic.app/api\"\r\n\r\nexport async function getPokemons() {\r\n  try {\r\n    const response = await axios.get(API_URL + \"/pokemons\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport async function getUserPokemons(userId) {\r\n    try {\r\n      const response = await axios.post(API_URL + \"/userPokemons\", {userId: userId});\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n\r\n  export async function addNewUserPokemon(body) {\r\n    console.log(\"body\", body);\r\n    const url = API_URL + '/userPokemons/auth';\r\n\r\n    await axios.post(url, {\r\n      userId: body.userId,\r\n      pokemonId: body.pokemonId,\r\n    });\r\n  }\r\n","import \"./AddToMyListCard.scss\";\r\n\r\nexport function AddToMyListCard({ currentPokemon, onAddPokemon }) {\r\n    const {name, imageUrl, type, level, abilities} = currentPokemon;\r\n\r\n    return(\r\n        <div className=\"add-pokemon\" >\r\n            <img src={imageUrl} alt={name} className=\"add-pokemon-img\"/>\r\n            <ul className=\"add-pokemon-details\">\r\n                <li className=\"add-pokemon-name\">\r\n                    { name }\r\n                </li>\r\n                <li className=\"add-pokemon-type\">\r\n                    <span className=\"add-pokemon-details__title\">Type:</span>  {type}\r\n                </li>\r\n                <li className=\"add-pokemon-level\">\r\n                    <span className=\"add-pokemon-details__title\">Level:</span>  {level}\r\n                </li>\r\n                <li className=\"add-pokemon-abilities\">\r\n                    <span className=\"add-pokemon-details__title\">Abilities:</span>  \r\n                    {abilities.join(\", \")}\r\n                </li>\r\n                <li>\r\n                    <button className=\"add-pokemon-btn\" onClick={onAddPokemon}>\r\n                        Add to My list\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n    </div>\r\n\r\n    )\r\n\r\n}","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport Cross from \"./cross.png\"\r\nimport \"./ModalWindow.scss\"\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport function ModalWindow({onClose, children}) {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown)}\r\n        }, []) \r\n\r\n    const handleKeyDown = e => {\r\n        if (e.code === 'Escape') { onClose() }\r\n    };\r\n\r\n    const handleOverlayClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n        onClose();\r\n        }\r\n    };\r\n\r\n        return createPortal(\r\n        <div className=\"overlay\" onClick={handleOverlayClick} >\r\n            <div className=\"modal\">\r\n                <button className='modal__close-btn' onClick={onClose}>\r\n                    <img src={Cross} alt=\"close\" width=\"12px\" height=\"12px\"/>\r\n                </button>\r\n                {children}\r\n            </div>\r\n        </div>,\r\n        modalRoot\r\n        );\r\n}\r\n\r\n","import \"./PokemonCard.scss\"\r\n\r\nexport function PokemonCard({ pokemon, onClick }) {\r\n    const {name, imageUrl, type, level, _id} = pokemon;\r\n\r\n    const handleClick = () => {\r\n        onClick(_id);\r\n    }\r\n\r\n    return (\r\n        <li className=\"pokemon-card\" onClick={handleClick}>\r\n            <ul className=\"pokemon-details\">\r\n                <li className=\"pokemon-image-frame\">\r\n                    <img src={imageUrl} alt={name} className=\"pokemon-img\"/>\r\n                </li>\r\n                <li className=\"pokemon-name\">\r\n                    { name }\r\n                </li>\r\n                <li className=\"pokemon-type\">\r\n                    <span className=\"pokemon-details__title\">Type:</span>  {type}\r\n                </li>\r\n                <li className=\"pokemon-level\">\r\n                    <span className=\"pokemon-details__title\">Level:</span>  {level}\r\n                </li>\r\n            </ul>\r\n        </li>\r\n    )\r\n}","import \"./PokemonList.scss\"\r\nimport { PokemonCard } from \"components/PokemonCard/PokemonCard\"\r\n\r\nexport function PokemonList({ pokemons, onClick }) {\r\n    const handleClick = (id) => {\r\n        onClick(id);\r\n    }\r\n\r\n    return (\r\n        <ul className=\"pokemon-list\">\r\n            {pokemons.map( pokemon => \r\n                <PokemonCard pokemon={ pokemon } key={pokemon._id} onClick={handleClick}/>\r\n            )}\r\n        </ul>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport './Pagination.scss';\r\n\r\nexport function Pagination({ pages, onChange }) {\r\n    const [page, setPage] = useState(1);\r\n\r\n    const handlePrevClick = () => {\r\n        if (page > 1) {\r\n            setPage(page - 1);\r\n        }\r\n    };\r\n\r\n    const handleNextClick = () => {\r\n        if (page < pages) {\r\n            setPage(page + 1);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        onChange(page);\r\n    }, [page, onChange]);\r\n\r\n    const isPrevBtnDisabled = page === 1;\r\n    const isNextBtnDisabled = pages <= page;\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <button\r\n                className=\"previos-btn\"\r\n                onClick={handlePrevClick}\r\n                disabled={isPrevBtnDisabled}\r\n            >\r\n                Prev\r\n            </button>\r\n            <button\r\n                className=\"next-btn\"\r\n                onClick={handleNextClick}\r\n                disabled={isNextBtnDisabled}\r\n            >\r\n                Next\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport Web3 from 'web3';\r\n\r\nimport { PokemonList } from \"components/PokemonList/PokemonList\";\r\nimport { Pagination } from \"components/Pagination/Pagination\";\r\nimport { ModalWindow } from \"components/ModalWindow/ModalWindow\";\r\nimport { AddToMyListCard } from \"components/AddToMyListCard/AddToMyListCard\";\r\n\r\nimport { getPokemons, addNewUserPokemon } from \"api/api\";\r\n\r\nexport default function PokemonListPage() {\r\n      const [pokemons, setPokemons] = useState([]);\r\n      const [pages, setPages] = useState(1);\r\n\r\n      const [isModalOpened, setModalOpened] = useState(false);\r\n      const [currentPokemon, setCurrenPokemon] = useState(pokemons[0]);\r\n      const [web3, setWeb3] = useState(null);\r\n      const toggleModal = () => { setModalOpened(!isModalOpened) };\r\n\r\n      useEffect(() => {\r\n        async function fetchData() {\r\n          const data = await getPokemons();\r\n          setPokemons(data);\r\n          const pages = Math.ceil(data.length / 12);\r\n          setPages(pages);\r\n        }\r\n        fetchData();\r\n      }, []);\r\n\r\n      function conectWithMetaWallet() {\r\n        // Check if Metamask is installed\r\n        if (typeof window.ethereum !== 'undefined') {\r\n          // Connect to Metamask\r\n          window.ethereum.enable().then(() => {\r\n            const web3 = new Web3(window.ethereum);\r\n            setWeb3(web3);\r\n\r\n            //Add new user\r\n            const reqBody = {\r\n              userId: web3.currentProvider.selectedAddress,\r\n              pokemonId: currentPokemon._id,\r\n            }\r\n\r\n            addNewUserPokemon(reqBody);\r\n\r\n          });\r\n        }\r\n        toggleModal();\r\n      }\r\n\r\n      useEffect(() => {\r\n        async function handleConnectWallet() {\r\n          // Check if user is logged into Metamask\r\n          if (web3 && web3.currentProvider && web3.currentProvider.selectedAddress) {\r\n            console.log('User is logged in with address:', web3.currentProvider.selectedAddress);\r\n          } else {\r\n            console.log('User is not logged in to Metamask');\r\n          }\r\n        }\r\n        handleConnectWallet();\r\n        \r\n      }, [web3]);\r\n\r\n      const changePage = (page) => {\r\n        console.log(page);\r\n      }\r\n\r\n      const getPokemonId = (id) => {\r\n        toggleModal();\r\n\r\n        const pokemon = pokemons.find(pokemon => pokemon._id === id)\r\n        setCurrenPokemon(pokemon);\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <PokemonList pokemons={pokemons} onClick={getPokemonId}/>\r\n            <Pagination pages={pages} onChange={(page) => changePage(page)}/>\r\n\r\n            {isModalOpened && (\r\n                <ModalWindow onClose={toggleModal} >\r\n                    <AddToMyListCard \r\n                      currentPokemon={currentPokemon} \r\n                      onAddPokemon={conectWithMetaWallet}/>\r\n                </ModalWindow>\r\n            )}\r\n        </div>\r\n    )\r\n}"],"names":["API_URL","getPokemons","axios","response","data","console","error","getUserPokemons","userId","addNewUserPokemon","body","log","pokemonId","AddToMyListCard","currentPokemon","onAddPokemon","name","imageUrl","type","level","abilities","className","src","alt","join","onClick","modalRoot","document","querySelector","ModalWindow","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","currentTarget","target","Cross","width","height","PokemonCard","pokemon","_id","PokemonList","pokemons","handleClick","id","map","Pagination","pages","onChange","useState","page","setPage","isPrevBtnDisabled","isNextBtnDisabled","disabled","PokemonListPage","setPokemons","setPages","isModalOpened","setModalOpened","setCurrenPokemon","web3","setWeb3","toggleModal","Math","ceil","length","fetchData","currentProvider","selectedAddress","handleConnectWallet","find","changePage","ethereum","enable","then","Web3","reqBody"],"sourceRoot":""}